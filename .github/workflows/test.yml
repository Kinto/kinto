on:
  push:
    branches:
      - master
  pull_request:

name: Unit Testing
permissions:
  contents: read

jobs:
  chore:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toxenv: [py38, py39, py310, py311, py311-raw]
        include:
          - toxenv: py38
            python-version: "3.8"
          - toxenv: py39
            python-version: "3.9"
          - toxenv: py310
            python-version: "3.10"
          - toxenv: py311
            python-version: "3.11"
          - toxenv: py311-raw
            python-version: "3.11"
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      memcached:
        image: memcached
        options: >-
          --health-cmd "timeout 5 bash -c 'cat < /dev/null > /dev/udp/127.0.0.1/11211'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 11211:11211

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install virtualenv
        run: |
          pip install virtualenv
          virtualenv --python=python3 .venv

      - name: Print environment
        run: |
          source .venv/bin/activate
          python --version
          pip --version

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          make install-dev
          make install-postgres
          pip install tox coveralls

      - name: Create database
        env:
          PGPASSWORD: postgres
        run: |
          psql -c "CREATE DATABASE testdb ENCODING 'UTF8' TEMPLATE template0;" -U postgres -h localhost

      - name: Tox
        run: |
          source .venv/bin/activate
          tox -e ${{ matrix.toxenv }}
      
      - name: Coveralls for ${{ matrix.toxenv }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.toxenv }}
          COVERALLS_PARALLEL: true
        run: |
          source .venv/bin/activate
          coveralls --service=github
      
  coveralls:
    name: Coveralls Finished
    needs: chore
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install coveralls
        run: pip install coveralls
      - name: Finished
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: coveralls --service=github --finish
